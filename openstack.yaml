tosca_definitions_version: cloudify_dsl_1_3

imports:

  - http://www.getcloudify.org/spec/cloudify/4.3/types.yaml
  - https://raw.githubusercontent.com/EarthmanT/cloudify-execution-plugin/0.3/plugin.yaml
  - plugin:cloudify-openstack-plugin
  - plugin:cloudify-utilities-plugin

  - imports/cloud-config.yaml

  - inputs/openstack_inputs.yaml
  - inputs/inputs.yaml


dsl_definitions:

  openstack_config: &openstack_config
    username: { get_input: keystone_username }
    password: { get_input: keystone_password }
    auth_url: { get_input: keystone_url }
    user_domain_name: { get_input: keystone_user_domain_name }
    project_name: { get_input: keystone_project_name }
    project_domain_name: { get_input: keystone_project_domain_name }
    region: { get_input: region }

node_templates:

  host:
    type:  cloudify.openstack.nodes.Server
    properties:
      openstack_config: *openstack_config
      resource_id:  { get_input: server_name }
      image: { get_input: image }
      flavor:  { get_input: flavor }
      agent_config:
        user: { get_input: agent_user }
        install_method: remote
        port: 22
        key: { get_secret: agent_key_private }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            args:
              userdata: { get_attribute: [ host_cloud_config, cloud_config ] }
    relationships:
      - target: port
        type: cloudify.openstack.server_connected_to_port
      - target: host_cloud_config
        type: cloudify.relationships.depends_on

  #-----------------------------------------------------------------------------

  port:
    type: cloudify.openstack.nodes.Port
    properties:
      openstack_config: *openstack_config
    relationships:
      - type: cloudify.relationships.contained_in
        target: public_network
      - type: cloudify.relationships.depends_on
        target: public_subnet
      - type: cloudify.openstack.port_connected_to_security_group
        target: security_group

  #-----------------------------------------------------------------------------

  security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { get_input: security_group_name }

  #-----------------------------------------------------------------------------

  public_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { get_input: public_subnet_name }
    relationships:
      - target: public_network
        type: cloudify.relationships.contained_in
      - target: router
        type: cloudify.openstack.subnet_connected_to_router

  public_network:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { get_input: public_network_name }

  router:
    type: cloudify.openstack.nodes.Router
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { get_input: router_name }
    relationships:
      - target: external_network
        type: cloudify.relationships.connected_to

  external_network:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { get_secret: external_network_name }

outputs:

  private_ip:
    value: { get_attribute: [ port, fixed_ip_address ] }
