tosca_definitions_version: cloudify_dsl_1_3

imports:

  - http://www.getcloudify.org/spec/cloudify/4.3/types.yaml
  # - https://raw.githubusercontent.com/EarthmanT/cloudify-execution-plugin/0.3/plugin.yaml
  - plugin:cloudify-openstack-plugin
  - plugin:cloudify-utilities-plugin
  - inputs/inputs.yaml


dsl_definitions:

  openstack_config: &openstack_config
    username: { get_secret: keystone_username }
    password: { get_secret: keystone_password }
    auth_url: { get_secret: keystone_url }
    user_domain_name: { get_secret: keystone_user_domain_name }
    project_name: { get_secret: keystone_project_name }
    project_domain_name: { get_secret: keystone_project_domain_name }
    region: { get_secret: region }

node_templates:

  host:
    type:  cloudify.openstack.nodes.Server
    properties:
      openstack_config: *openstack_config
      resource_id:  { get_input: server_name }
      image: { get_secret: ubuntu_trusty_image }
      flavor: { get_secret: small_image_flavor  }
      agent_config:
        user: { get_input: agent_user }
        install_method: init_script
        port: 22
        key: { get_secret: agent_key_private }
        # network: external
      server:
        key_name: { get_secret: cloud_key }
    relationships:
      - type: cloudify.openstack.server_connected_to_port
        target: port
      - type: cloudify.openstack.server_connected_to_security_group
        target: security_group

  security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { get_secret: default_security_group_name }

  port:
    type: cloudify.openstack.nodes.Port
    properties:
      openstack_config: *openstack_config
    relationships:
      - type: cloudify.relationships.contained_in
        target: public_network

  public_network:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { get_secret: public_network_name }

outputs:

  private_ip:
    value: { get_attribute: [ port, fixed_ip_address ] }
